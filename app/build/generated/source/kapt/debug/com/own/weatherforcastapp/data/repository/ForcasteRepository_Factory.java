// Generated by Dagger (https://google.github.io/dagger).
package com.own.weatherforcastapp.data.repository;

import com.own.weatherforcastapp.data.remote.NetworkService;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ForcasteRepository_Factory implements Factory<ForcasteRepository> {
  private final Provider<NetworkService> networkServiceProvider;

  public ForcasteRepository_Factory(Provider<NetworkService> networkServiceProvider) {
    this.networkServiceProvider = networkServiceProvider;
  }

  @Override
  public ForcasteRepository get() {
    return new ForcasteRepository(networkServiceProvider.get());
  }

  public static ForcasteRepository_Factory create(Provider<NetworkService> networkServiceProvider) {
    return new ForcasteRepository_Factory(networkServiceProvider);
  }

  public static ForcasteRepository newForcasteRepository(NetworkService networkService) {
    return new ForcasteRepository(networkService);
  }
}
