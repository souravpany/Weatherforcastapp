// Generated by Dagger (https://google.github.io/dagger).
package com.own.weatherforcastapp.di.module;

import com.own.weatherforcastapp.utils.network.NetworkHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_ProvideNetworkHelperFactory implements Factory<NetworkHelper> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideNetworkHelperFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public NetworkHelper get() {
    return proxyProvideNetworkHelper(module);
  }

  public static ApplicationModule_ProvideNetworkHelperFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideNetworkHelperFactory(module);
  }

  public static NetworkHelper proxyProvideNetworkHelper(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideNetworkHelper(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
