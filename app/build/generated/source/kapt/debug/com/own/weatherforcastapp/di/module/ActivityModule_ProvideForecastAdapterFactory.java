// Generated by Dagger (https://google.github.io/dagger).
package com.own.weatherforcastapp.di.module;

import com.own.weatherforcastapp.ui.main.adapter.ForecastListAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ActivityModule_ProvideForecastAdapterFactory
    implements Factory<ForecastListAdapter> {
  private final ActivityModule module;

  public ActivityModule_ProvideForecastAdapterFactory(ActivityModule module) {
    this.module = module;
  }

  @Override
  public ForecastListAdapter get() {
    return proxyProvideForecastAdapter(module);
  }

  public static ActivityModule_ProvideForecastAdapterFactory create(ActivityModule module) {
    return new ActivityModule_ProvideForecastAdapterFactory(module);
  }

  public static ForecastListAdapter proxyProvideForecastAdapter(ActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideForecastAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
