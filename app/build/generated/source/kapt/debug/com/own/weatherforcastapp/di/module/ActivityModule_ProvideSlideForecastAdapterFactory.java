// Generated by Dagger (https://google.github.io/dagger).
package com.own.weatherforcastapp.di.module;

import com.own.weatherforcastapp.ui.main.adapter.ForecastSlideListAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ActivityModule_ProvideSlideForecastAdapterFactory
    implements Factory<ForecastSlideListAdapter> {
  private final ActivityModule module;

  public ActivityModule_ProvideSlideForecastAdapterFactory(ActivityModule module) {
    this.module = module;
  }

  @Override
  public ForecastSlideListAdapter get() {
    return proxyProvideSlideForecastAdapter(module);
  }

  public static ActivityModule_ProvideSlideForecastAdapterFactory create(ActivityModule module) {
    return new ActivityModule_ProvideSlideForecastAdapterFactory(module);
  }

  public static ForecastSlideListAdapter proxyProvideSlideForecastAdapter(ActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideSlideForecastAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
